function [D Pinv D2 S Q] = secondOrderSBPoperators(ORDER, N)
% ORDER=6;  % 2, 4 or 6
% N=16;   % If gridpoints numbered 0,1,2 ..., N

% matrix operators
switch ORDER
    case(2)
        Pinv=[2 ones(1,N-1) 2];                            % 2nd
        Q=.5*(diag(sparse([-1;zeros(N-1,1);1]))...            % 2nd
            +diag(sparse(ones(N,1)),1)-diag(sparse(ones(N,1)),-1));
        %D1=Pinv*Q;
        Pinv = diag(sparse(Pinv));
        D = Pinv*Q;

        %% Second order operators
        D2 = -2*diag(sparse(ones(1,N+1))) + diag(sparse(ones(1,N)),1) + diag(sparse(ones(1,N)),-1);
        D2(1,1:3) = [1 -2 1];
        D2(end,end-2:end) = [1 -2 1];
        S = sparse([1 1 1 N+1 N+1 N+1],[1 2 3 N+1 N N-1],[3/2 -2 1/2 3/2 -2 1/2],N+1,N+1);
    case(4)
        if N<8
            error('N too small, must be > 8 for order 4 SBP')
        end
        Pinv=[48/17 48/59 48/43 48/49 ...     % 4th
            ones(1,N-7) 48/49 48/43 48/59 48/17];
        diagQ=ones(N+1,1)*[1/12 -2/3 0 2/3 -1/12];          % 4th
        Q=spdiags(diagQ,[-2:2],N+1,N+1);
        Q(1:4,1:4)=[-1/2 59/96 -1/12 -1/32;-59/96 0 59/96 0;...
            1/12 -59/96 0 59/96; 1/32 0 -59/96 0];
        Q(N-2:N+1,N-2:N+1) = -flipud(fliplr(Q(1:4,1:4)));
        %D1=Pinv*Q;
        Pinv = diag(sparse(Pinv));
        D = Pinv*Q;

        %% Second order operators
        e = sparse(ones(1,N+1));
        D2 =  (-1/12) * diag(e(1:end-2),-2)...
            +   (4/3) * diag(e(1:end-1),-1)...
            +  (-5/2) * diag(e         , 0)...
            +   (4/3) * diag(e(1:end-1), 1)...
            + (-1/12) * diag(e(1:end-2), 2);
        D2(1,1:4) = [2 -5 4 -1];
        D2(2,1:4) = [1 -2 1 0];
        D2(3,1:5) = [-4/43 59/43 -110/43 59/43 -4/43];
        D2(4,1:6) = [-1/49 0 59/49 -118/49 64/49 -4/49];
        D2(end+0,end+1-(1:4)) = [2 -5 4 -1];
        D2(end-1,end+1-(1:4)) = [1 -2 1 0];
        D2(end-2,end+1-(1:5)) = [-4/43 59/43 -110/43 59/43 -4/43];
        D2(end-3,end+1-(1:6)) = [-1/49 0 59/49 -118/49 64/49 -4/49];
        S = sparse([1 1 1 1 N+1 N+1 N+1 N+1],[1 2 3 4 N+1 N N-1 N-2],[11/6 -3 3/2 -1/3 11/6 -3 3/2 -1/3],N+1,N+1);
    case(6)
        if N<12
            error('N too small, must be > 12 for order 6 SBP')
        end
        Pinv=[43200/13649 8640/12013 4320/2711 4320/5359 8640/7877 43200/43801 ...
            ones(1,N+1-12) ...
            43200/43801 8640/7877 4320/5359 4320/2711 8640/12013 43200/13649];
        diagQ=ones(N+1,1)*[-1 9 -45 0 45 -9 1]/60;
        Q=spdiags(diagQ,[-3:3],N+1,N+1);   

        Q(1,1) = -1/2;
        Q(1,2) =  104009/172800;
        Q(1,3) =  30443/259200;
        Q(1,4) = -33311/86400;
        Q(1,5) =  16863/86400;
        Q(1,6) = -15025/518400;

        Q(2,1) = -104009/172800;
        Q(2,2) =  0;
        Q(2,3) = -311/51840;
        Q(2,4) =  20229/17280;
        Q(2,5) = -24337/34560;
        Q(2,6) =  36661/259200;

        Q(3,1) = -30443/259200;
        Q(3,2) =  311/51840;
        Q(3,3) =  0;
        Q(3,4) = -11155/25920;
        Q(3,5) =  41287/51840;
        Q(3,6) = -21999/86400;

        Q(4,1) =  33311/86400;
        Q(4,2) = -20229/17280;
        Q(4,3) =  11155/25920;
        Q(4,4) =  0;
        Q(4,5) =  4147/17280;
        Q(4,6) =  25427/259200;     %    Q(4,7) =  1/60;

        Q(5,1) = -16863/86400;
        Q(5,2) =  24337/34560;
        Q(5,3) = -41287/51840;
        Q(5,4) = -4147/17280;
        Q(5,5) =  0;
        Q(5,6) =  342523/518400;    %    Q(5,7) = -9/60;    Q(5,8) =  1/60;

        Q(6,1) =  15025/518400;
        Q(6,2) = -36661/259200;
        Q(6,3) =  21999/86400;
        Q(6,4) = -25427/259200;
        Q(6,5) = -342523/518400;
        Q(6,6) =  0;    %    Q(6,7) =  45/60;  Q(6,8) = -9/60;  Q(6,9) =  1/60;

        Q(N-4:N+1,N-4:N+1) = -flipud(fliplr(Q(1:6,1:6)));
        %D1=Pinv*Q;   
        Pinv = diag(sparse(Pinv));
        D = Pinv*Q;
    case(8)
        if N<16
            error('N too small, must be > 16 for order 8 SBP')
        end
        Pinv=[5080320/1498139 725760/1107307 80640/20761 725760/1304999 ...
            725760/299527 80640/103097 725760/670091 5080320/5127739 ...
            ones(1,N+1-16) ...
            5080320/5127739 725760/670091 80640/103097 725760/299527 ...
            725760/1304999 80640/20761 725760/1107307 5080320/1498139];
        %     r68 = -1022551/30481920; % minimal bandwidth
        %     r78 = 6445687/8709120;
        %     r67 = 1714837/4354560;

        r67=0.649;
        r68=-0.104;
        r78=0.755;

        diagQ=ones(N+1,1)*[3,-32,168,-672,0,672,-168,32,-3]/840;
        Q=spdiags(diagQ,[-4:4],N+1,N+1);

        Q(1,1) =-1/2;
        Q(1,2) =-142642467/20321280  +10*r78   +r67 +5*r68;
        Q(1,3) = 705710031/20321280  -45*r78 -5*r67-24*r68;
        Q(1,4) =-3577778591/60963840 +75*r78+10*r67+45*r68;
        Q(1,5) = 203718909/5080320   -50*r78-10*r67-40*r68;
        Q(1,6) =-32111205/20321280   +5*r67+15*r68;
        Q(1,7) =-652789417/60963840  +15*r78-r67;
        Q(1,8) = 74517981/20321280   -5*r78-r68;

        Q(2,1) = 142642467/20321280  -10*r78   -r67 -5*r68;
        Q(2,2) = 0;
        Q(2,3) =-141502371/1451520  +126*r78+15*r67+70*r68;
        Q(2,4) = 159673719/725760   -280*r78-40*r67-175*r68;
        Q(2,5) =-1477714693/8709120+210*r78+45*r67+175*r68;
        Q(2,6) = 11652351/1451520-24*r67-70*r68;
        Q(2,7) = 3606945/72576-70*r78+5*r67;
        Q(2,8) =-536324953/30481920+24*r78+5*r68;

        Q(3,1) =-235236677/6773760   +45*r78 +5*r67+24*r68;
        Q(3,2) = 47167457/483840    -126*r78-15*r67-70*r68;
        Q(3,3) = 0;
        Q(3,4) =-120219461/483840+315*r78+50*r67+210*r68;
        Q(3,5) = 249289259/967680-315*r78-75*r67-280*r68;
        Q(3,6) =-2611503/161280+45*r67+126*r68;
        Q(3,7) =-7149666/80640+126*r78-10*r67;
        Q(3,8) = 37199165/1128960-45*r78-10*r68;

        Q(4,1) = 3577778591/60963840 -75*r78-10*r67-45*r68;
        Q(4,2) =-159673719/725760   +280*r78+40*r67+175*r68;
        Q(4,3) = 360658383/1451520-315*r78-50*r67-210*r68;
        Q(4,4) = 0;
        Q(4,5) =-424854441/2903040+175*r78+50*r67+175*r68;
        Q(4,6) = 22885113/1451520-40*r67-105*r68;
        Q(4,7) = 158096578/2177280-105*r78+10*r67;
        Q(4,8) =-296462325/10160640+40*r78+10*r68;

        Q(5,1) =-203718909/5080320   +50*r78+10*r67+40*r68;
        Q(5,2) = 1477714693/8709120-210*r78-45*r67-175*r68;
        Q(5,3) =-747867777/2903040+315*r78+75*r67+280*r68;
        Q(5,4) = 424854441/2903040-175*r78-50*r67-175*r68;
        Q(5,5) = 0;
        Q(5,6) =-17380335/2903040+15*r67+35*r68;
        Q(5,7) =-67080435/2903040+35*r78-5*r67;
        Q(5,8) = 657798011/60963840-15*r78-5*r68;

        Q(6,1) = 1529105/967680      -5*r67-15*r68;
        Q(6,2) =-3884117/483840+24*r67+70*r68;
        Q(6,3) = 2611503/161280-45*r67-126*r68;
        Q(6,4) =-7628371/483840+40*r67+105*r68;
        Q(6,5) = 5793445/967680-15*r67-35*r68;
        Q(6,6) = 0;
        Q(6,7) = r67;
        Q(6,8) = r68;

        Q(7,1) = 93255631/8709120-15*r78+r67;
        Q(7,2) =-3606945/72576+70*r78-5*r67;
        Q(7,3) = 64346994/725760-126*r78+10*r67;
        Q(7,4) =-158096578/2177280+105*r78-10*r67;
        Q(7,5) = 67080435/2903040-35*r78+5*r67;
        Q(7,6) =-r67;
        Q(7,7) = 0;
        Q(7,8) = r78;

        Q(8,1) =-74517981/20321280+5*r78+r68;
        Q(8,2) = 536324953/30481920-24*r78-5*r68;
        Q(8,3) =-334792485/10160640+45*r78+10*r68;
        Q(8,4) = 296462325/10160640-40*r78-10*r68;
        Q(8,5) =-657798011/60963840+15*r78+5*r68;
        Q(8,6) =-r68;
        Q(8,7) =-r78;
        Q(8,8) = 0;

        Q(N-6:N+1,N-6:N+1) = -flipud(fliplr(Q(1:8,1:8)));

        Pinv = diag(sparse(Pinv));
        D = Pinv*Q;
    otherwise
        error('Invalid SBP order, must be 2,4,6,8')
end

